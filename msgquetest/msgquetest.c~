/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * main.c - Auto-generated by Anjuta's Makefile project wizard
 * 
 */

#include <stdio.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>

#include  <pthread.h> 
#include "msgque.h"


static changid_x=0;

void msgque_Readthread(void* param)
{
	struct msgbuffer msg;
	key_t key;
	
	if( changid_x == 0 )
	{
		key = msgque_init(MSG_FILE,BUFFER_SIZE );
	}
	else
	{
		key = msgque_init(MSG_FILE,BUFFER_SIZE+1 );
	}
	//key = msgque_init(MSG_FILE,BUFFER_SIZE );
	
	while(1)
	{

		if( msgque_rev(key, &msg) <= 0 )
		{	
			sleep(2);
			continue;
		}
		printf("recv:msgid=%d,text=[%s] \n",msg.mtype,msg.mtext );
		//sleep(1);

	}
}

int main( int argc , char* argv[] )
{

	key_t key;
	struct msgbuffer msg;
	pthread_t threadid;	
	char buf[BUFFER_SIZE];

	int myinput;
	int msgid;
	
	if( argv <2 )
	{

		printf("usage: 1/0\n");
		return 0;			
	}

	myinput = atoi(argv[1] );

	if( myinput == 0  )
	{
		changid_x =0;
		printf("A \n");
	}
	else
	{
		changid_x =1;
		printf("B \n");
	}

	
	if( changid_x == 0 )
	{
		key = msgque_init(MSG_FILE,BUFFER_SIZE+1 );
	}
	else
	{
		key = msgque_init(MSG_FILE,BUFFER_SIZE );
	}


	//key = msgque_init(MSG_FILE,BUFFER_SIZE );
	printf("key=:%d\n",key);
	sleep(2);
	
	msgid = msgque_getmsgid(key);
	printf("msgid:%d\n",msgid);

	pthread_create(&threadid,NULL,(void*)msgque_Readthread,NULL);
	
	while(1)
    {
        fprintf(stdout,"Send:",NULL);
        fflush(stdout);
        fgets(buf,BUFFER_SIZE,stdin);

		if(strcmp(buf,"exit\n") == 0)
        {
            break;
        }

		if( strlen(buf)> 1)
			msgque_send(msgid, 123, buf, strlen(buf)-1);
   }  

	msgque_del(msgid);		
	return (0);
}
